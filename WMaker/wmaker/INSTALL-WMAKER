
		Installation Instructions for Window Maker

The latest version of Window Maker (-crm) can be found in the
git repository at

http://repo.or.cz/w/wmaker-crm.git


SUPPORTED PLATFORMS
===================

- Intel GNU/Linux Systems in general

Patches to make it work on other platforms are welcome.


REQUIREMENTS:
=============

The following software is required to use Window Maker:

- X11R6.x
	Window Maker can be compiled in older versions of X, like X11R5
	(Solaris) or X11R4 (OpenWindows) but it will not work 100% correctly.
	In such servers there will not be application icons and you'll have
	trouble using the dock. Upgrading the client libraries (Xlib, Xt etc)
	will help if you can't upgrade the server.

The following is required to build Window Maker:

- Basic obvious stuff
	gcc (or some other ANSI C compiler)
	glibc development files (usually glibc-devel in Linux distributions)
	X development files (XFree86-devel or something similar)

- autoconf, automake and libtool
	autoconf 2.54
	automake 1.4
	libtool 1.4.2

- Xft2
	and its dependencies (such as freetype2 and fontconfig)
	You will also need the development files for it (xft2-devel)


OPTIONAL:
=========

These libraries are not required to make Window Maker work, but they
are supported in case you want to use them. Version numbers are those
that I have (and therefore, guaranteed to work), but other versions
might work too.


- libXPM 4.7 or newer
	Older versions may not work!!!
	Available at ftp://sunsite.unc.edu/pub/Linux/libs/X/

	There is built-in support for XPM files, but it will not
	load images in some uncommon encodings.

- libpng 0.96 or newer and zlib
	For PNG image support.
	http://www.cdrom.com/pub/png/

- libtiff 3.4 or newer
	For TIFF image support.
	You can get it at ftp://ftp.sgi.com/graphics/tiff

- libjpeg 6.0.1 or newer
	For JPEG image support
	http://www.ijg.org/

- libgif 2.2 or libungif
	For GIF image support
	ftp://prtr-13.ucsc.edu/pub/libungif/

- GNU xgettext
	If you want to use translated messages, you will need GNU gettext.
	Other versions of gettext are not compatible and will not work.
	Get the GNU version from ftp://ftp.gnu.org



CONFIGURE OPTIONS:
==================

If you downloaded the cvs or git versions, type

./autogen.sh

to generate the config files.

These options can be passed to the configure script to enable/disable
some Window Maker features. Example:

./configure --enable-modelock --disable-gif

will configure Window Maker with modelock supported and disable gif support.
Normally, you won't need any of them.

To get a list of other options, run ./configure --help

--with-libs-from
	specify additional paths for libraries to be searched.
	The -L flag must precede each path, like:
	--with-libs-from="-L/opt/libs -L/usr/local/lib"

--with-incs-from
	specify additional paths for header files to be searched.
	The -I flag must precede each paths, like:
	--with-incs-from="-I/opt/headers -I/usr/local/include"

--disable-shm
	disable use of the MIT shared memory extension. This will slow down
	texture generation a little bit, but in some cases it seems to be
	necessary due to a bug that manifests as messed icons and textures.

--disable-motif
	disable support for mwm window manager hints

--enable-modelock
	XKB language status lock support. If you don't know what it is you
	probably don't need it.

--disable-xpm
	disables use of the XPM library even if it is available on your
	system.

--disable-png
	disables use of PNG library

--disable-tiff
	disable use of TIFF library

--disable-gif
	disable use of GIF library

--disable-jpeg
	disable use of JPEG library

--disable-shape
	disables shaped windows (for oclock, xeyes etc.)


PLATFORM SPECIFIC NOTES:
========================

- GNU/Linux in general
	Make sure you have /usr/local/lib in /etc/ld.so.conf and that you
	run ldconfig after installing.
	Uninstall any packaged version of Window Maker before installing a new
	version.

- RedHat GNU/Linux
	RedHat systems have several annoying problems. If you use it,
	be sure to follow the steps below or Window Maker will not work:

	* if you installed the Window Maker that comes with RedHat, uninstall
	it before upgrading;

	* make sure you don't have the LANG and LINGUAS environment variables
	set to en_RN;

	* make sure you have /usr/local/bin in your PATH environment
	variable;

	* make sure you have /usr/local/lib in /etc/ld.so.conf before running
	ldconfig;

- PowerPC MkLinux
	You will need to have the latest version of Xpmac. Older versions
	seem to have bugs that cause the system to hang.

- Debian GNU/Linux
	If you want JPEG and TIFF support, make sure you have libtiff-dev
	and libjpeg-dev	installed.

- SuSE GNU/Linux
        If you installed the Window Maker package from SuSE,
        uninstall it before trying to compile wmaker or you
        might have problems.

- MetroX (unknown version)
	MetroX has a bug that corrupts pixmaps that are set as window
	backgrounds. If you use MetroX and has weird problems with
	textures, do not use textures in title bars. Or use a different
	X server.

INSTALLATION:
=============

Build Window Maker
------------------
	For a quick start, type the following in your shell prompt:

	./configure
	make

then, login as root and type:

	make install
	ldconfig

or if you want to strip the debugging symbols from the binaries and make them
smaller, you can instead type:

	make install-strip
	ldconfig

This will build and install Window Maker with default parameters.

If you want to customize some compile-time options, you can do the
following.

	1. (optional) Look at the CONFIGURE OPTIONS section above for the
	options available. Also run:

	./configure --help

	to get a complete listing of other options that are available.

	2. Run configure with the options you want. For example, if you
	want to use the --enable-modelock option, type:

	./configure --enable-modelock

	3. (optional) Edit src/wconfig.h with your favorite text editor
	and browse through it for some options you might want to change.

	4. Compile. Just type:

	make

	5. Login as root (if you can't do that, read the "I don't have the
	root password :-(" section) and install Window Maker in your system:
		su root
		make install


User specific configuration
---------------------------

These instructions do not need to be followed when upgrading Window Maker
from an older version, unless stated differently in the NEWS file.

Every user on your system that wishes to run Window Maker must do the
following:

	1. Install Window Maker configuration files in your home directory.
Type:
	wmaker.inst

	wmaker.inst will install Window Maker configuration files and will
setup X to automatically launch Window Maker at startup.

	That's it!

	You can type "man wmaker" to get some general help for configuration
and other stuff.

Read the User Guide for a more in-depth explanation of Window Maker.

You might want to take a look at the FAQ too.



Installing the extras package
-----------------------------

Unpack WindowMaker-extra-<version-number>.tar.gz in /usr/local/share

You can get the file at http://windowmaker.org/pub/source/release/. This file
is optional and only have a few icons, and themes. Look for the latest
<version-number> available.  Also there is a WindowMaker-extra.readme to
instruct you where that package should go.



I don't have the root password :(
---------------------------------

If you can't get superuser privileges (can't be root) you can install
wmaker in your own home directory. For that, supply the --prefix option
when running configure in step 2 of building Window Maker. You will
also need to supply the --with-gnustepdir option, to specify the path for
WPrefs.app Example:

./configure --prefix=/home/jshmoe --with-gnustepdir=/home/jshmoe/GNUstep/Applications


Then make /home/jshmoe/bin be included in your search PATH, add
/home/jshmoe/lib to your LD_LIBRARY_PATH environment variable and run
bin/wmaker.inst

Of course, /home/jshmoe is supposed to be replaced with your actual home
directory path.



UPGRADING
=========

If you are upgrading from an older version of Window Maker:

   1. Configure and build Window Maker as always
   2. Install Window Maker (but do not run wmaker.inst)
   3. Read the NEWS file and update your configuration files if necessary.


TROUBLESHOOTING
===============

When you have some trouble during configuration (while running configure),
like not being able to use a graphic format library you think you have
installed, look at the config.log file for clues of the problem.


== Error with loading fonts, even if they exist.

Try rebuilding without NLS support.

== Error when configuring

ltconfig: unrecognized option `--no-reexec'
Try `ltconfig --help' for more information.
configure: error: libtool configure failed

remove the --no-reexec option from aclocal.m4 and reconfigure
Also make sure the autoconf and automake versions you have installed are:
autoconf 2.13
automake 1.4
libtool 1.3

Note that it must not be libtool 1.2b, it must be libtool 1.3,
from the GNU sites.

== configure doesn't detect libtiff, or other graphic libraries.

Delete config.cache, then rerun configure adding the following options to
configure (among the other options you use):
--with-libs-from="-L/usr/local/lib"
--with-incs-from="-I/usr/local/include -I/usr/local/include/tiff"
Put the paths where your graphic libs and their corresponding header files are
located. You can put multiple paths in any of these options, as the example
of --with-incs-from shows. Just put a space between them.


== configure doesn't detect libXpm.

* Check if you have a symbolic link from libXpm.so.4.9 to libXpm.so


== Segmentation fault on startup

* Check if the version of libXPM you have is at least 4.7

* Check if you have an updated version of ~/GNUstep/Defaults/WindowMaker

If you're not sure, try renaming ~/GNUstep to ~/GNUtmp and then run wmaker.inst

== "...: your machine is misconfigured. gethostname() returned (none)"

* the hostname of your machine is set to something invalid, that starts
	with a parenthesis. Do a man hostname for info about how to set it.


== The root menu contains only 2 entries. ("XTerm" and "Exit...")

* Window Maker could not read your menu definition file
you should check wmaker's output for an error, it may be
visible in the console or in the .xsession-errors file.


== checking lex output file root... configure: error: cannot find output from true; giving up

* Read the REQUIREMENTS section of this file.


LOCALES/INTERNATIONALIZATION
============================

Window Maker has national language support. To enable national language
support, you must compile Window Maker with some additional parameters.


0 - You must have the GNU gettext package installed. It can be
obtained at ftp://prep.ai.mit.edu/pub/gnu/gettext-nnn.tar.gz

Steps 1 to 3 can be skipped if you use the Install script.

1 - You have to select the languages you want to support. Set the
LINGUAS to the list of locales you want. English is always
supported. Example:

setenv LINGUAS "pt ja de"
in csh

or

export LINGUAS;LINGUAS="pt ja de"
in sh

The list of supported locales can be found in po/README.
English is the default language.

Read po/README if you wish to translate and maintain locale files
for other languages.

2 - Additionally, if your language uses multi-byte characters, such
as Japanese or Korean, you must set the MultiByteText option to YES
in ~/GNUstep/Defaults/WMGLOBAL

3 - Configure, build and install Window Maker normally.

4 - To select a particular locale at run-time you must set the LANG
environment variable to the locale you want. For example, if you want to set
the Portuguese locale, you must run

setenv LANG pt

in csh or

export LANG; LANG=pt

in Bourne sh and similar

Note: If you have the LC_CTYPE environment variable set, you must
unset it before running wmaker.

For menu definition files, Window Maker searches for them in the
following order (for Brazilian Portuguese, in this case):

menu.pt_BR
menu.pt
menu
